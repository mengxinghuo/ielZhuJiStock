<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.truck.dao.OutDetailMapper" >
  <resultMap id="BaseResultMap" type="com.truck.pojo.OutDetail" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="out_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="parts_no" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="parts_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="parts_en_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="unit" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sales_price" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="device_type" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="stock_position" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="out_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="define_sn" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="address" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="entry_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="destination" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="buy_contract_no" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="model" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sn" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="engine_no" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="xx_no" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="brand" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="model_alias" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="define_str" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="define_model_no" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="configuration" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="stock_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, out_id, parts_no, parts_name, parts_en_name, unit, sales_price, device_type, 
    stock_position, status, out_num, create_time, update_time,define_sn,address,entry_time,destination, buy_contract_no, model, 
    sn, engine_no, xx_no, brand,model_alias, define_str,
    define_model_no,configuration,stock_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from iel_out_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from iel_out_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.truck.pojo.OutDetail" >
    insert into iel_out_detail (id, out_id, parts_no, 
      parts_name, parts_en_name, unit, 
      sales_price, device_type, stock_position, 
      status, out_num, create_time, 
      update_time,define_sn,address,entry_time,destination, buy_contract_no, model, 
    sn, engine_no, xx_no, brand,model_alias, define_str,
    define_model_no,configuration,stock_id)
    values (#{id,jdbcType=INTEGER}, #{outId,jdbcType=INTEGER}, #{partsNo,jdbcType=VARCHAR}, 
      #{partsName,jdbcType=VARCHAR}, #{partsEnName,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, 
      #{salesPrice,jdbcType=DECIMAL}, #{deviceType,jdbcType=VARCHAR}, #{stockPosition,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{outNum,jdbcType=INTEGER}, now(),
      now(),#{defineSn},#{address},#{entryTime},#{destination}, #{buyContractNo,jdbcType=VARCHAR}, 
      #{model,jdbcType=VARCHAR}, #{sn,jdbcType=VARCHAR}, #{engineNo,jdbcType=VARCHAR}, 
      #{xxNo,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR},#{modelAlias},
      #{defineStr,jdbcType=VARCHAR}, #{defineModelNo,jdbcType=VARCHAR},#{configuration},#{stockId})
  </insert>
  <insert id="insertSelective" parameterType="com.truck.pojo.OutDetail" >
    insert into iel_out_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="outId != null" >
        out_id,
      </if>
      <if test="partsNo != null" >
        parts_no,
      </if>
      <if test="partsName != null" >
        parts_name,
      </if>
      <if test="partsEnName != null" >
        parts_en_name,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="salesPrice != null" >
        sales_price,
      </if>
      <if test="deviceType != null" >
        device_type,
      </if>
      <if test="stockPosition != null" >
        stock_position,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="outNum != null" >
        out_num,
      </if>
        create_time,
        update_time,
      <if test="defineSn != null" >
        define_sn,
      </if>
      <if test="address != null" >
        address,
      </if>
        <if test="entryTime != null" >
          entry_time,
        </if>
      <if test="destination != null" >
        destination,
      </if>
        <if test="buyContractNo != null" >
          buy_contract_no,
        </if>
        <if test="model != null" >
          model,
        </if>
        <if test="sn != null" >
          sn,
        </if>
        <if test="engineNo != null" >
          engine_no,
        </if>
        <if test="xxNo != null" >
          xx_no,
        </if>
        <if test="brand != null" >
          brand,
        </if>
      <if test="modelAlias != null" >
        model_alias,
      </if>
      <if test="defineStr != null" >
        define_str,
      </if>
      <if test="defineModelNo != null" >
        define_model_no,
      </if>
      <if test="configuration != null" >
        configuration,
      </if>
      <if test="stockId != null" >
        stock_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="outId != null" >
        #{outId,jdbcType=INTEGER},
      </if>
      <if test="partsNo != null" >
        #{partsNo,jdbcType=VARCHAR},
      </if>
      <if test="partsName != null" >
        #{partsName,jdbcType=VARCHAR},
      </if>
      <if test="partsEnName != null" >
        #{partsEnName,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="salesPrice != null" >
        #{salesPrice,jdbcType=DECIMAL},
      </if>
      <if test="deviceType != null" >
        #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="stockPosition != null" >
        #{stockPosition,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="outNum != null" >
        #{outNum,jdbcType=INTEGER},
      </if>
      now(),
      now(),
      <if test="defineSn != null" >
        #{defineSn},
      </if>
      <if test="address != null" >
        #{address},
      </if>
      <if test="entryTime != null" >
        #{entryTime},
      </if>
      <if test="destination != null" >
        #{destination},
      </if>
      <if test="buyContractNo != null" >
        #{buyContractNo,jdbcType=VARCHAR},
      </if>
      <if test="model != null" >
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="sn != null" >
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="engineNo != null" >
        #{engineNo,jdbcType=VARCHAR},
      </if>
      <if test="xxNo != null" >
        #{xxNo,jdbcType=VARCHAR},
      </if>
      <if test="brand != null" >
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="modelAlias != null" >
        #{modelAlias},
      </if>
      <if test="defineStr != null" >
        #{defineStr,jdbcType=VARCHAR},
      </if>
      <if test="defineModelNo != null" >
        #{defineModelNo,jdbcType=VARCHAR},
      </if>
      <if test="configuration != null" >
        #{configuration,jdbcType=VARCHAR},
      </if>
      <if test="stockId != null" >
        #{stockId},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.truck.pojo.OutDetail" >
    update iel_out_detail
    <set >
      <if test="outId != null" >
        out_id = #{outId,jdbcType=INTEGER},
      </if>
      <if test="partsNo != null" >
        parts_no = #{partsNo,jdbcType=VARCHAR},
      </if>
      <if test="partsName != null" >
        parts_name = #{partsName,jdbcType=VARCHAR},
      </if>
      <if test="partsEnName != null" >
        parts_en_name = #{partsEnName,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="salesPrice != null" >
        sales_price = #{salesPrice,jdbcType=DECIMAL},
      </if>
      <if test="deviceType != null" >
        device_type = #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="stockPosition != null" >
        stock_position = #{stockPosition,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="outNum != null" >
        out_num = #{outNum,jdbcType=INTEGER},
      </if>
        update_time = now(),
      <if test="defineSn != null" >
        define_sn=#{defineSn},
      </if>
      <if test="address != null" >
        address=#{address},
      </if>
      <if test="entryTime != null" >
        entry_time=#{entryTime},
      </if>
      <if test="destination != null" >
        destination=#{destination},
      </if>
      <if test="buyContractNo != null" >
        buy_contract_no=#{buyContractNo,jdbcType=VARCHAR},
      </if>
      <if test="model != null" >
        model=#{model,jdbcType=VARCHAR},
      </if>
      <if test="sn != null" >
        sn=#{sn,jdbcType=VARCHAR},
      </if>
      <if test="engineNo != null" >
        engine_no=#{engineNo,jdbcType=VARCHAR},
      </if>
      <if test="xxNo != null" >
        xx_no=#{xxNo,jdbcType=VARCHAR},
      </if>
      <if test="brand != null" >
        brand=#{brand,jdbcType=VARCHAR},
      </if>
      <if test="modelAlias != null" >
        model_alias=#{modelAlias},
      </if>
      <if test="defineStr != null" >
        define_str = #{defineStr,jdbcType=VARCHAR},
      </if>
      <if test="defineModelNo != null" >
        define_model_no = #{defineModelNo,jdbcType=VARCHAR},
      </if>
      <if test="configuration != null" >
        configuration = #{configuration,jdbcType=VARCHAR},
      </if>
      <if test="stockId != null" >
        stock_id = #{stockId},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.truck.pojo.OutDetail" >
    update iel_out_detail
    set out_id = #{outId,jdbcType=INTEGER},
      parts_no = #{partsNo,jdbcType=VARCHAR},
      parts_name = #{partsName,jdbcType=VARCHAR},
      parts_en_name = #{partsEnName,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      sales_price = #{salesPrice,jdbcType=DECIMAL},
      device_type = #{deviceType,jdbcType=VARCHAR},
      stock_position = #{stockPosition,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      out_num = #{outNum,jdbcType=INTEGER},
      update_time = now(),
      define_sn=#{defineSn},
      address=#{address}
      configuration=#{configuration}
      stock_id=#{stockId}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="batchInsert" parameterType="list" >
    insert into iel_out_detail (out_id,
    sales_price, device_type, stock_position,
    out_num, create_time,
    update_time,define_sn,address,entry_time,destination, buy_contract_no, model,
    sn, engine_no, xx_no, brand,model_alias,define_str,define_model_no,configuration,stock_id)
    values
    <foreach collection="outDetailList" index="index" item="item" separator=",">
      (#{item.outId,jdbcType=INTEGER},
      #{item.salesPrice,jdbcType=DECIMAL}, #{item.deviceType,jdbcType=VARCHAR}, #{item.stockPosition,jdbcType=INTEGER},
      #{item.outNum,jdbcType=INTEGER}, now(),now(),
      #{item.defineSn},#{item.address},#{item.entryTime},#{item.destination}, #{item.buyContractNo,jdbcType=VARCHAR},
      #{item.model,jdbcType=VARCHAR}, #{item.sn,jdbcType=VARCHAR}, #{item.engineNo,jdbcType=VARCHAR},
      #{item.xxNo,jdbcType=VARCHAR}, #{item.brand,jdbcType=VARCHAR},#{item.modelAlias},#{item.defineStr},#{item.defineModelNo},#{item.configuration},#{item.stockId}
      )
    </foreach>
  </insert>

  <select id="selectByOutId" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from iel_out_detail
    where out_id = #{outId}
    order by create_time desc
  </select>
</mapper>